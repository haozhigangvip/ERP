server:
  port: 8099
  servlet:
    path: /oss
logging:
  level:
    com.targetmol:  info

spring:
  application:
    name: auth-service
  datasource:
#    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    driver-class-name: com.mysql.jdbc.Driver
    url: ${MYSQL_URL:jdbc:mysql://192.168.3.15:3306/tsbio?&useSSL=false&characterEncoding=utf-8}
    username: tsbio
    password: ts@801
  redis:
    host: ${REDIS_HOST:192.168.3.15}
    port: ${REDIS_PORT:6379}
    timeout: 5000 #连接超时 毫秒
    jedis:
      pool:
        maxActive: 3
        maxIdle: 3
        minIdle: 1
        maxWait: -1 #连接池最大等行时间 -1没有限制
mybatis:
  type-aliases-package: com.targetmol.domain #别名路径
  configuration:
    map-underscore-to-camel-case: true      #驼峰命名
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

auth:
  tokenValiditySeconds: 1800  #token存储到redis的过期时间
  clientId: XcWebApp
  clientSecret: XcWebApp
  cookieDomain: 192.168.3.245
  cookieMaxAge: 1800    #cookie存活时间 -1表示关闭浏览器就释放cookie
encrypt:
  key-store:
    location: classpath:/targetmol.keystore
    secret: ts@801
    alias: targetmol
    password: ts@801
eureka:
  client:
    service-url:
      defaultZone:  http://127.0.0.1:10086/eureka
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
  instance:
    prefer-ip-address: true
    ip-address: 192.168.3.245
jwt:
  config:
    key: targetmol  #jwt 私钥
    ttl:  3600000   #jwt 1小时失效.
ribbon:
  ConnectionTimeout: 5000   #ribbon连接超时时长1000毫秒
  ReadTimeout: 6000  #ribbon读取超时时长 6000毫秒
  MaxAutoRetries: 2   #当前服务重启次数
  MaxAutoRetriesNextServer: 3   #切换服务重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
